{"version":3,"sources":["components/Preview.js","components/FieldsList.js","components/UploadForm.js","components/ClustersList.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["customIcons","forwardRef","props","ref","Preview","data","onBack","useState","fields","setFields","useEffect","length","tmp","Object","keys","filter","field","map","fieldName","title","Paper","columns","Button","startIcon","onClick","icons","options","padding","FieldsList","selectedFields","onChange","style","Typography","marginBottom","fontWeight","Grid","container","spacing","index","item","key","textTransform","minWidth","variant","size","color","includes","endIcon","currIndex","indexOf","slice","margin","repeat","useStyles","makeStyles","theme","w120","maxWidth","form","loading","marginLeft","UploadForm","onResponse","classes","selectedFile","setSelectedFile","isLoading","setIsLoading","component","onSubmit","event","preventDefault","formData","FormData","append","Axios","post","then","datafields","catch","error","console","log","response","className","htmlFor","display","justifyContent","role","fullWidth","name","id","hidden","e","target","files","type","accept","disabled","CircularProgress","properties","ClustersList","clusters","cluster","direction","wrap","overflowX","proper","fontSize","marginTop","href","header","backgroundColor","body","footer","Dashboard","previewData","setPreviewData","isClustering","setIsClustering","setSelectedFields","start","setStart","end","setEnd","nClusters","setNClusters","nLoops","setNLoops","setClusters","md","xs","Collapse","in","height","TextField","label","value","lines","JSON","parse","err","ButtonGroup","numOfClusters","maxLoops","content","App","minHeight","justify","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b65f5b2.chunk.js","sourcesContent":["import React, { useEffect, useState, forwardRef } from 'react'\nimport MaterialTable from 'material-table'\nimport { Button, Paper } from '@material-ui/core'\nimport BackIcon from '@material-ui/icons/ArrowBack'\nimport AddIcon from '@material-ui/icons/Add'\nimport CheckIcon from '@material-ui/icons/Check'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport EditIcon from '@material-ui/icons/Edit'\nimport SaveAltIcon from '@material-ui/icons/SaveAlt'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport LastPageIcon from '@material-ui/icons/LastPage'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport ViewColumnIcon from '@material-ui/icons/ViewColumn'\n\nconst customIcons = {\n    'Add': forwardRef((props, ref) => <AddIcon {...props} ref={ref} />),\n    'Check': forwardRef((props, ref) => <CheckIcon {...props} ref={ref} />),\n    'Clear': forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n    'Delete': forwardRef((props, ref) => <DeleteOutlineIcon {...props} ref={ref} />),\n    'DetailPanel': forwardRef((props, ref) => <ChevronRightIcon {...props} ref={ref} />),\n    'Edit': forwardRef((props, ref) => <EditIcon {...props} ref={ref} />),\n    'Export': forwardRef((props, ref) => <SaveAltIcon {...props} ref={ref} />),\n    'Filter': forwardRef((props, ref) => <FilterListIcon {...props} ref={ref} />),\n    'FirstPage': forwardRef((props, ref) => <FirstPageIcon {...props} ref={ref} />),\n    'LastPage': forwardRef((props, ref) => <LastPageIcon {...props} ref={ref} />),\n    'NextPage': forwardRef((props, ref) => <ChevronRightIcon {...props} ref={ref} />),\n    'PreviousPage': forwardRef((props, ref) => <ChevronLeftIcon {...props} ref={ref} />),\n    'ResetSearch': forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n    'Search': forwardRef((props, ref) => <SearchIcon {...props} ref={ref} />),\n    'SortArrow': forwardRef((props, ref) => <ArrowUpwardIcon {...props} ref={ref} />),\n    'ThirdStateCheck': forwardRef((props, ref) => <RemoveIcon {...props} ref={ref} />),\n    'ViewColumn': forwardRef((props, ref) => <ViewColumnIcon {...props} ref={ref} />),\n}\n\nfunction Preview({data, onBack}) {\n    const [fields, setFields] = useState([]);\n    \n    useEffect(() => {\n        if (data.length === 0) return;\n        const tmp = Object.keys(data[0])\n            .filter(field => typeof data[0][field] !== 'object') \n            .map(fieldName => ({\n                title: fieldName,\n                field: fieldName\n            }));\n        setFields(tmp);\n    }, [data])\n    \n    return (\n        <Paper>\n            {data.length === 0 ? '' :\n                <MaterialTable\n                    columns={fields}\n                    data={data}\n                    title={<Button startIcon={<BackIcon/>} onClick={onBack}>Quay lại</Button>}\n                    icons={customIcons}\n                    options={{\n                        padding: 'dense'\n                    }}\n                />\n            }\n        </Paper>\n    );\n}\n\nexport default Preview;","import React from 'react'\nimport { Grid, Paper, Typography, Button } from '@material-ui/core'\nimport CheckIcon from '@material-ui/icons/Check'\n\nfunction FieldsList({fields, selectedFields, onChange}) {\n    return (\n        <Paper style={{ padding: 12 }}>\n            <Typography style={{ marginBottom: 12, fontWeight: 'bold' }}>CÁC THUỘC TÍNH CỦA DỮ LIỆU ({fields.length})</Typography>\n            <Grid container spacing={1}>\n                {fields.map((field, index) => \n                    <Grid item key={field + index}>\n                        <Button \n                            style={{\n                                textTransform: 'none',\n                                padding: '0px 6px',\n                                minWidth: '24px'\n                            }} \n                            variant='contained'\n                            size={'small'}\n                            color={selectedFields.includes(field) ? 'primary' : 'default'}\n                            endIcon={<CheckIcon/>}\n                            onClick={() => {\n                                const currIndex = selectedFields.indexOf(field);\n                                if (selectedFields.includes(field)) {\n                                    onChange([\n                                        ...selectedFields.slice(0, currIndex),\n                                        ...selectedFields.slice(currIndex +1, fields.length)\n                                    ]);\n                                } else {\n                                    onChange([\n                                        ...selectedFields,\n                                        field\n                                    ]);\n                                }\n                            }}>{field}</Button>\n                    </Grid>\n                )}\n            </Grid>\n            <Typography \n                style={{ margin: \"12px 0px\" }}\n                color={selectedFields.length > 6 ? 'error' : 'textPrimary'}>\n                    <em>Đã chọn {selectedFields.length} thuộc tính{selectedFields.length > 6 ? \", quá nhiều rồi\" + '!'.repeat(selectedFields.length - 6) : \"\"}</em>\n            </Typography>\n        </Paper>\n    );\n}\n\nexport default FieldsList;","import React, { useState } from 'react'\nimport { Paper, Typography, makeStyles, Button, CircularProgress } from '@material-ui/core'\nimport PublishIcon from '@material-ui/icons/Publish'\nimport Axios from 'axios'\n\nconst useStyles = makeStyles(theme => ({\n    w120: {\n        maxWidth: 120\n    },\n    form: {\n        padding: 12,\n    },\n    title: {\n        marginBottom: 12,\n        fontWeight: 'bold'\n    },\n    loading: {\n        marginLeft: '12px'\n    },\n}))\n\nfunction UploadForm({onResponse}) {\n    const classes = useStyles();\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        setIsLoading(true);\n        const formData = new FormData();\n        formData.append('uploaded', selectedFile);\n        Axios.post(\"/upload\", formData)\n            .then(({data}) => {\n                setIsLoading(false);\n                onResponse(data.datafields);\n            })\n            .catch((error) => { \n                setIsLoading(false);\n                console.log(error.response);\n            })\n    }\n\n    return (\n        <Paper component=\"form\" onSubmit={handleSubmit} className={classes.form}>\n            <Typography className={classes.title}>CHỌN FILE</Typography>\n\n            <label htmlFor=\"fileInput\" style={{marginBottom: 12, display: 'flex', justifyContent: 'flex-end'}}>\n                <Button\n                    variant=\"outlined\"\n                    component=\"div\" \n                    role=\"div\"\n                    fullWidth\n                    style={{ textTransform: 'none', marginBottom: 12 }} \n                >\n                    {selectedFile ? selectedFile.name : 'Chọn file để phân tích'}\n                </Button>\n            </label>\n            \n            <input \n                id=\"fileInput\" \n                hidden \n                name=\"data\" \n                onChange={e => setSelectedFile(e.target.files[0])} \n                type=\"file\" \n                accept=\".xlsx\" \n                style={{marginBottom: 12}}\n            />\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <Button \n                    type=\"submit\" \n                    disabled={selectedFile === null || isLoading} \n                    variant=\"contained\" \n                    color=\"primary\"\n                    startIcon={isLoading ? <CircularProgress size={24} /> : <PublishIcon/>}\n                >Tải lên</Button>\n            </div>\n        </Paper>\n    );\n}\n\nexport default UploadForm;","import React from 'react'\nimport { Paper, Grid, Typography, Button } from '@material-ui/core';\n\nconst properties = ['count', 'min', 'max', 'mean', 'freq', 'top', 'unique'];\n\nfunction ClustersList({clusters}) {\n    return(<div>\n        {clusters.map(\n            (cluster, index) => (\n                <Paper style={{ padding: 12, marginBottom: 16 }}>\n                    <Typography variant=\"h3\">{index + 1}</Typography>\n                    <Grid \n                        container\n                        direction=\"row\"\n                        spacing={2}\n                        wrap=\"nowrap\"\n                        style={{\n                            overflowX: 'auto'\n                        }}>\n                            {Object.keys(cluster).map(\n                                field => (\n                                    <Grid item style={{ minWidth: 160 }}>\n                                        <Typography style={{ fontWeight: 'bold' }}>{field}</Typography>\n                                        {properties.map(\n                                            proper => cluster[field][proper] \n                                                ? <Typography style={{ fontSize: '12px' }}>{proper}: {cluster[field][proper]}</Typography> \n                                                : ''\n                                        )}\n                                    </Grid>\n                                )\n                            )}\n                    </Grid>\n                    <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 12 }}>\n                        <Button color=\"primary\" size=\"small\" href={\"/download/\" + (index+1)}>Tải xuống</Button>\n                    </div>\n                </Paper>\n            )\n        )}\n    </div>);\n}\n\nexport default ClustersList;","import React, { useState } from 'react'\nimport { Grid, Paper, Typography, makeStyles, Button, CircularProgress, TextField, Collapse, ButtonGroup } from '@material-ui/core'\nimport EyeIcon from '@material-ui/icons/RemoveRedEye'\nimport BubbleIcon from '@material-ui/icons/BubbleChart'\nimport Axios from 'axios'\nimport Preview from './Preview'\nimport FieldsList from './FieldsList'\nimport UploadForm from './UploadForm'\nimport ClustersList from './ClustersList'\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        padding: 12\n    },\n    header: {\n        backgroundColor: \"#123456\",\n        color: \"white\",\n        padding: 16,\n        '& h1': {\n            fontSize: 24\n        }\n    },\n    body: {\n        padding: 16\n    },\n    footer: {\n        padding: 16\n    },\n    w120: {\n        maxWidth: 120\n    },\n    form: {\n        '& label, & button, & input': {\n            marginBottom: 12\n        }\n    },\n    title: {\n        marginBottom: 12,\n        fontWeight: 'bold'\n    },\n    loading: {\n        marginLeft: 12\n    }\n}))\n\nfunction Dashboard() {\n    const classes = useStyles();\n    const [fields, setFields] = useState([]);\n    const [previewData, setPreviewData] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isClustering, setIsClustering] = useState(false);\n    const [selectedFields, setSelectedFields] = useState([]);\n    const [start, setStart] = useState(0);\n    const [end, setEnd] = useState(10);\n    const [nClusters, setNClusters] = useState(3);\n    const [nLoops, setNLoops] = useState(300);\n    const [clusters, setClusters] = useState([]);\n\n    const handlePreview = () => {\n        setIsLoading(true);\n        Axios.post('/preview', {\n            fields: selectedFields,\n            lines: [start, end]\n        }).then(({data}) => {\n            setPreviewData(JSON.parse(data));\n            setIsLoading(false);\n        }).catch(err => {\n            setIsLoading(false);\n            console.log(err.response);\n        });\n    }\n\n    const handleCluster = () => {\n        setIsClustering(true);\n        Axios.post('/cluster', {\n            fields: selectedFields,\n            numOfClusters: nClusters, \n            maxLoops: nLoops\n        }).then(({data}) => {\n            console.log(JSON.parse(data));\n            setClusters(JSON.parse(data));\n            setIsClustering(false);\n        }).catch(err => {\n            setIsClustering(false);\n            console.log(err.response);\n        });\n    }\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item md={8} xs={12}>\n                <Collapse in={previewData.length > 0 && fields.length > 0 && clusters.length === 0}>\n                    <Preview data={previewData} onBack={() => setPreviewData([])} />\n                </Collapse>\n                <Collapse in={previewData.length === 0 && fields.length > 0 && clusters.length === 0}>\n                    <FieldsList fields={fields} selectedFields={selectedFields} onChange={(data) => setSelectedFields(data)} />\n                </Collapse>\n                <Collapse in={clusters.length > 0}>\n                    <ClustersList clusters={clusters} />\n                </Collapse>\n            </Grid>\n            <Grid item md={fields.length > 0 ? 4 : 12} xs={12}>\n                <UploadForm onResponse={(data) => setFields(data)}  />\n                <div style={{ height: 16 }} />\n                <Collapse in={fields.length > 0}>\n                    <Paper className={classes.container}>\n                        <Typography style={{ marginBottom: 12 }}>Nhập số dòng để xem trước</Typography>\n                        <Grid container spacing={1}>\n                            <Grid item xs={6} >\n                                <TextField type=\"number\" label=\"Bắt đầu\" value={start} onChange={e => setStart(e.target.value)} fullWidth/>\n                            </Grid>\n                            <Grid item xs={6} >\n                                <TextField type=\"number\" label=\"Kết thúc\" value={end} onChange={e => setEnd(e.target.value)} fullWidth/>\n                            </Grid>\n                        </Grid>\n                        <div style={{ display: 'flex', marginTop: 12, justifyContent: 'flex-end' }}>\n                            <Button \n                                onClick={handlePreview}\n                                disabled={selectedFields.length === 0 || isLoading || isClustering} \n                                variant=\"contained\" \n                                startIcon={isLoading ? <CircularProgress size={24}/> : <EyeIcon/>}\n                                color=\"primary\">Xem trước</Button>\n                        </div>\n                    </Paper>\n                    <div style={{ height: 16 }} />\n                    <Paper className={classes.container}>\n                        <Typography style={{ marginBottom: 12 }}>Tùy chọn gom nhóm</Typography>\n                        <Grid container spacing={1}>\n                            <Grid item xs={6} >\n                                <TextField type=\"number\" label=\"Số nhóm\" value={nClusters} onChange={e => setNClusters(e.target.value)} fullWidth/>\n                            </Grid>\n                            <Grid item xs={6} >\n                                <TextField type=\"number\" label=\"Số lần lặp\" value={nLoops} onChange={e => setNLoops(e.target.value)} fullWidth/>\n                            </Grid>\n                        </Grid>\n                        <div style={{ display: 'flex', marginTop: 12, justifyContent: 'flex-end' }}>\n                            <ButtonGroup>\n                            <Button \n                                onClick={() => {\n                                    setClusters([]);\n                                    setPreviewData([]);\n                                }}\n                                disabled={selectedFields.length === 0 || isLoading || isClustering} \n                                color=\"primary\" >Chọn lại</Button>\n                            <Button \n                                onClick={handleCluster}\n                                disabled={selectedFields.length === 0 || isLoading || isClustering} \n                                variant=\"contained\" \n                                startIcon={isClustering ? <CircularProgress size={24}/> : <BubbleIcon/>}\n                                color=\"primary\" >Gom nhóm</Button>\n                            </ButtonGroup>\n                        </div>\n                    </Paper>\n                </Collapse>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Dashboard;","import React from 'react'\nimport { Grid, Typography, makeStyles } from '@material-ui/core'\nimport Dashboard from './components/Dashboard';\n\nconst useStyles = makeStyles(theme => ({\n    header: {\n        backgroundColor: \"#123456\",\n        color: \"white\",\n        padding: 16,\n        '& h1': {\n            fontSize: 24\n        }\n    },\n    content: {\n        maxWidth: 920,\n        margin: 12\n    }\n}))\n\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div style={{ backgroundColor: \"#dedede\", minHeight: '110vh'}}>\n      <div className={classes.header}>\n          <Typography variant=\"h1\">Data Analysis</Typography>\n      </div>\n      <Grid container justify=\"center\" >\n          <Grid item className={classes.content}>\n              <Dashboard />\n          </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}